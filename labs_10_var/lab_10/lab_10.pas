var
    NG: integer; // Количество групп данных в текущем потоке.
    i: integer; // Счётчик количества групп данных.
    j: integer; // Счётчик количества данных в группе.
    x1: integer; // Генерируемые данные текущей группы.
    min, max: integer; // Минимальное и максимальное числа диапазона.
    count: integer; // Количество чисел в группе.
    F: file of integer; { Файловая переменная для записи
                          сгенерированных данных в файл.
                          Она же используется для чтения.}
    F2: file of integer; // Файловая переменная для записи второго файла.
    NewFileName_1: string; // Имя файла для исходныхи данных.
    NewFileName_2: string; // Имя файла для записи результатов.
    N_Potokov: integer; // Количество потоков данных.
    K: integer;// Счётчик потоков данных.
//---------------------------------------------------------------------------
begin
    // Диалог с пользователем о вводе имени файла данных.
    Writeln;
    Writeln('Введите имя файла данных'); // Запрос.
    Write('Name=');
    Readln(NewFileName_1);
    if (length(NewFileName_1) = 0)
    then begin
        Writeln('Имя файла не может быть пустым. Программа завершает работу.');
        Exit; // Завершаем работу.
    end;
    
    // Диалог с пользователем о вводе имени файла для записи результатов.
    Writeln;
    Writeln('Введите имя файла результатов'); // Запрос.
    Write('Name='); Readln(NewFileName_2);
    if (length(NewFileName_2) = 0)
    then begin
        Writeln('Имя файла не может быть пустым. Программа завершает работу.');
        Exit; // Завершаем работу.
    end;
    
    // Диалог с пользователем.
    Writeln;
    Writeln('Введите количество потоков данных'); // Запрос.
    Write('N='); Readln(N_Potokov);
    if (N_Potokov < 1)
    then begin
        Writeln('Количество потоков не может быть меньше одного.');
        Writeln('Программа завершает работу.');
        Exit; // Завершаем работу.
    end;
    
    Writeln;
    Writeln('Введите количество чисел в группе'); // Запрос.
    Write('Count='); Readln(count);
    if (count < 1)
    then begin
        Writeln('Количество чисел в группе не может быть меньше одной.');
        Writeln('Программа завершает работу.');
        Exit; // Завершаем работу.
    end;
    
    Writeln;
    Writeln('Введите минимальное число диапазона'); // Запрос.
    Write('min='); Readln(min);
    
    Writeln;
    Writeln('Введите максимальное число диапазона'); // Запрос.
    Write('max='); Readln(max);
    if max < min then
    begin
        Writeln('Максимальное число не может быть меньше минимального.');
        Writeln('Программа завершает работу.');
        Exit; // Завершаем работу.
    end;
    
    //-------------------------------------------------------------------------
    // ЦИКЛИЧЕСКАЯ ГЕНЕРАЦИЯ ДАННЫХ ДЛЯ ВСЕХ ПОТОКОВ
    //-------------------------------------------------------------------------
    Writeln;
    Writeln('ГЕНЕРАЦИЯ ДАННЫХ И ИХ ЗАПИСЬ В ИСХОДНЫЙ ФАЙЛ.');
    Randomize; // инициализация генератора случайных чисел.
    Assign(F, NewFileName_1); // Связывание файловой перем. с файлом данных.
    Rewrite(F); // Открытие связанного файла данных на запись.
    // Запись в файл количества потоков данных, указанное пользователем.
    Write(F, N_Potokov);
    // Запись в файл количества чисел в группе, указанное пользователем.
    Write(F, count);
    // Цикл по потокам данных.
    for K := 1 to N_Potokov do
    begin
        // Ввод количества групп данных в текущем потоке.
        Writeln;
        Writeln('Введите количество групп данных в потоке № ', K); // Запрос.
        Write('NG=');
        Readln(NG);
        // Проверка на корректность.
        if (NG < 1)
        then begin
            Writeln('Количество групп данных не может быть меньше 1');
            Writeln('В текущем потоке будет сгенерирована одна группа данных.');
            NG := 1;
        end;
        // Генерация данных текущего потока, их контрольный вывод на экран,
        // и их запись в типизированный файл данных.
        Writeln('Будет сгенерировано ', NG, ' групп данных. По ', count,' цифр в группе.');
        Write(F, NG); // Запись в файл количества групп данных в текущем потоке.
        // Генерация, контрольный вывод и запись в файл всех групп данных текущего потока.
        for i := 1 to NG do
        begin
            for j := 1 to count do
            begin
                x1 := random(min, max); // Генерация числа в текущей группе.
                // Контрольный вывод сгенерированных данных на экран.
                Write(x1:3);
                // Запись сгенерированных данных в типизированный файл.
                Write(F, x1);
            end;
            Writeln;
        end;
        Writeln('Генерация данных в потоке № ', K, ' завершена.');
    end; // ОКОНЧАНИЕ цикла по потокам данных.
    Close(F); // Закрытие записываемого файла данных.
    Writeln;
    Writeln('Данные сгенерированы и успешно записаны в файл ', NewFileName_1);
    Writeln('включая указание в началае файла количества потоков');
    Writeln('и в начале каждого потока количество групп данных в нём.');
    
    //-------------------------------------------------------------------------
    // ЦИКЛИЧЕСКОЕ ЧТЕНИЕ И ОББРАБОТКА ДАННЫХ ДЛЯ ВСЕХ ПОТОКОВ
    //-------------------------------------------------------------------------
    Writeln;
    Writeln('ЧТЕНИЕ ДАННЫХ ИЗ ФАЙЛА, ИХ ОБРАБОТКА И ЗАПИСЬ В НОВЫЙ ФАЙЛ.');
    Assign(F, NewFileName_1); // Связывание файловых переменных
    Assign(F2, NewFileName_2); // с файлами на диске.
    ReSet(F); // Открытие файла данных на чтение.
    ReWrite(F2); // Открытие результирующего файла на запись.
    Read(F, N_Potokov); // Чтение из файла количества потоков данных.
    Read(F, count); // Чтение из файла количества чисел в группе.
    // Цикл по потокам данных.
    for K := 1 to N_Potokov do
    begin
        Writeln;
        Writeln('Обработка групп данных в потоке № ', K);
        Read(F, NG); // Чтение из файла данных количества групп в текущем потоке.
        // Чтение данных текущего потока из файла, их обработка,
        // контрольный вывод на экран и запись в новый файл.
        for i := 1 to NG do
        begin
            Read(F, x1);
            min:=x1;
            max:=x1;
            for j := 1 to count-1 do
            begin
                Read(F, x1); // Чтение цифры в текущей группе.
                if x1 > max then max := x1;
                if x1 < min then min := x1;
            end;
            // Контрольный вывод считанных данных и результата их обработки
            // на экран.
            Writeln('Группа № ', i:3,'. Min=', min:3,' Max=', max:3);
            Write(F2, min, max); // Запись результата в новый файл.
        end;
        Writeln('Обработка данных в потоке № ', K, ' завершена.');
    end; // ОКОНЧАНИЕ цикла по потокам данных.
    Close(F); // Закрытие читаемого файла данных.
    Close(F2); // Закрытие записываемого файла результатов.
    Writeln;
    Writeln('Данные считаны из файла ', NewFileName_1);
    Writeln('обработаны и записаны в файл ', NewFileName_2);
end.
//---------------------------------------------------------------------------
// КОНЕЦ ПРОГРАММЫ.