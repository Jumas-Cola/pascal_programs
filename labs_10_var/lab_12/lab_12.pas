type
    Поезд = record
        Номер: integer;
        Рейс: record
            ПунктНазначения: string;
            ДатаОтправки: array of integer;
            ВремяОтправки: array of integer;
        end;
    end;

function ВводДанныхПоезда: Поезд;
var
    НовыйПоезд: Поезд;
begin
    var Номер: integer;
    repeat
        println('Введите номер поезда:');
        try
            readln(Номер)
        except
            continue
        end;
        if not ((Номер > 0) and (Номер < 1000)) then
            println('Номер должен быть больше 0 и меньше 1000.');
    until ((Номер > 0) and (Номер < 1000));
    //----------------------------------------------------------
    var ПунктНазначения: string;
    repeat
        println('Введите пункт назначения:');
        try
            readln(ПунктНазначения)
        except
            continue
        end;
        if not ((length(ПунктНазначения) > 2) and (length(ПунктНазначения) < 1000)) then
            println('Название должно быть диннее 2 символов и короче 1000.');
    until ((length(ПунктНазначения) > 2) and (length(ПунктНазначения) < 1000));
    //----------------------------------------------------------
    var Дата: array of integer;
    repeat
        println('Введите дату отправки. Сначала число, затем месяц:');
        try
            Дата := ReadSeqInteger(2).ToArray
        except
            continue
        end;
        if not ((Дата[0] > 0) and (Дата[0] <= 31) and (Дата[1] > 0) and (Дата[1] <= 12)) then
            println('Число: 1 - 31; Месяц: 1 - 12');
    until ((Дата[0] > 0) and (Дата[0] <= 31) and (Дата[1] > 0) and (Дата[1] <= 12));
    //----------------------------------------------------------
    var Время: array of integer;
    repeat
        println('Введите время отправки. Сначала часы, затем минуты:');
        try
            Время := ReadSeqInteger(2).ToArray
        except
            continue
        end;
        if not ((Время[0] >= 0) and (Время[0] < 24) and (Время[1] >= 0) and (Время[1] < 60)) then
            println('Часы: 0 - 23; Минуты: 0 - 59');
    until ((Время[0] >= 0) and (Время[0] < 24) and (Время[1] >= 0) and (Время[1] < 60));
    //----------------------------------------------------------
    readln; //bugfix
    writeln;
    
    НовыйПоезд.Номер := Номер;
    НовыйПоезд.Рейс.ПунктНазначения := ПунктНазначения;
    НовыйПоезд.Рейс.ДатаОтправки := Дата;
    НовыйПоезд.Рейс.ВремяОтправки := Время;
    
    ВводДанныхПоезда := НовыйПоезд;
end;

procedure ПечатьДанныхПоезда(ПоездДляПечати: Поезд);
begin
    println;
    println('Номер поезда:', ПоездДляПечати.Номер);
    println('Рейс:');
    println('   Пункт назначения:', ПоездДляПечати.Рейс.ПунктНазначения);
    writeln('   Дата отправки: ', ПоездДляПечати.Рейс.ДатаОтправки[0], '.',
                                  ПоездДляПечати.Рейс.ДатаОтправки[1]);
    writeln('   Время отправки: ', ПоездДляПечати.Рейс.ВремяОтправки[0], ':',
                                   ПоездДляПечати.Рейс.ВремяОтправки[1]);
end;

begin
    var Поезда :=  SeqGen(3, x -> ВводДанныхПоезда).ToArray;
    var Пункт: string;
    var Дата: array of integer;
    
    repeat
        writeln('Введите желаемый пункт назначения:');
        try
            readln(Пункт);
        except
            continue
        end;
    until (length(Пункт) > 0);
    
    repeat
        writeln('Введите желаемую дату. Сначала число, затем месяц:');
        try
            Дата := ReadSeqInteger(2).ToArray;
        except
            continue
        end;
    until (length(Дата) > 0);
    
    Поезда := Поезда.Where(x -> (x.Рейс.ПунктНазначения = Пункт) 
                                and (x.Рейс.ДатаОтправки[0] = Дата[0]) 
                                and (x.Рейс.ДатаОтправки[1] = Дата[1])).ToArray;
    if length(Поезда) > 0 then
    begin
        writeln('Рейсы в ', Пункт, ' на ', Дата[0], '.', Дата[1], ' :');
        foreach i: Поезд in Поезда do
            ПечатьДанныхПоезда(i);
    end
    else
        writeln('Рейсов в ', Пункт, ' на ', Дата[0], '.', Дата[1], ' не найдено.');
end.